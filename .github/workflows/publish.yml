# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

# Runs checks, tests, code analysis, auto-formats code, and publishes
# documentation.
name: Continuous integration

# This workflow runs on the default branch, i.e. `main`.
on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch ]

permissions:
  pages: write
  id-token: write

jobs:
  initial-checks:
    runs-on: ubuntu-latest

    steps:
      # If this workflow is already in progress or queued, we cancel it; we are
      # about to do the exact same tests and documentation on potentially new
      # code, so it is pointless to continue them.
      - name: Cancel existing workflow runs
        uses: styfle/cancel-workflow-action@0.10.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout XRB
        uses: actions/checkout@v3

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Run checks
        uses: actions-rs/cargo@v1
        with:
          command: check

  clippy-analyse:
    runs-on: ubuntu-latest
    needs: initial-checks

    steps:
      - name: Checkout XRB
        uses: actions/checkout@v3

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Clippy analysis
        uses: actions-rs/cargo@v1
        with:
          command: clippy

  run-tests:
    runs-on: ubuntu-latest
    needs: initial-checks

    steps:
      - name: Checkout XRB
        uses: actions/checkout@v3

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test

  auto-format:
    runs-on: ubuntu-latest
    needs: initial-checks

    steps:
      - name: Checkout XRB
        uses: actions/checkout@v3

      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      - name: Auto-format with rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all

      - name: Configure git credentials
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Commit and push changes
        run: |
          git add .
          git commit -m "Formatted with rustfmt [${{ github.run_number }}]"
          git push

  # Generate the docs with rustdoc.
  build-docs:
    runs-on: ubuntu-latest
    # Always perform the publish-docs job, even if auto-formatting was
    # unsuccessful.
    if: ${{ always() }}
    # We only build the documentation after the code has been formatted so that
    # the code sources linked in the documentation are formatted.
    needs: auto-format

    steps:
      # 'Download' XRB to `./xrb`.
      - name: Checkout XRB
        uses: actions/checkout@v3
		with:
          path: xrb

      # 'Download' a template to put the generated docs in.
      - name: Checkout XRB docs template
        uses: actions/checkout@v3
        with:
          repository: XdotRS/xrb-docs-template
          path: template

      # Install the Rust toolchain so that docs can be generated.
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy

      # Setup GitHub Pages to easily deploy to it.
      - name: Setup GitHub Pages
        uses: actions/configure-pages@v2

      - name: Generate documentation
        working-directory: xrb
        uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --no-deps --workspace --document-private-items

      - name: Move generated docs into docs template
        run: mv xrb/target/doc template/doc

      - name: Upload GH Pages artifact
        uses: actions/upload-pages-artifact@v1
        path: template

  deploy-docs:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    # Can't deploy the documentation until it exists!
    needs: build-docs

    steps:
      # Deploys the documentation to GitHub Pages using the artifact (stored
      # but not committed changes for Actions) saved earlier.
      - name: Deploy documentation to GitHub Pages
        uses: actions/deploy-pages@v1
